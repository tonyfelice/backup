{
  "active": false,
  "connections": {
    "find binaries": {
      "main": [
        [
          {
            "node": "split open",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "switch": {
      "main": [
        [
          {
            "node": "passthru",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "plaintext",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "pdf",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "json",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "rtf",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "csv",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "markup",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ods",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "xls",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "xlsx",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "plaintext": {
      "main": [
        [
          {
            "node": "loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "start": {
      "main": [
        [
          {
            "node": "find binaries",
            "type": "main",
            "index": 0
          },
          {
            "node": "merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "pdf": {
      "main": [
        [
          {
            "node": "loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "json": {
      "main": [
        [
          {
            "node": "loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "rtf": {
      "main": [
        [
          {
            "node": "loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "csv": {
      "main": [
        [
          {
            "node": "loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "markup": {
      "main": [
        [
          {
            "node": "loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ods": {
      "main": [
        [
          {
            "node": "loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "xls": {
      "main": [
        [
          {
            "node": "loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "xlsx": {
      "main": [
        [
          {
            "node": "loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "aggregate": {
      "main": [
        [
          {
            "node": "merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "split open": {
      "main": [
        [
          {
            "node": "convert to file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert to file": {
      "main": [
        [
          {
            "node": "loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "loop": {
      "main": [
        [
          {
            "node": "aggregate",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "passthru": {
      "main": [
        [
          {
            "node": "loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "merge": {
      "main": [
        [
          {
            "node": "code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-19T22:58:03.767Z",
  "id": "jBU5ABdRopDAYVIM",
  "isArchived": true,
  "meta": null,
  "name": "CZM: file handler 0.1",
  "nodes": [
    {
      "parameters": {
        "jsCode": "const files = $input.all().at(0)?.binary;\nconst isFilesSent = typeof files === 'object' && Object.keys(files)?.length;\nif(isFilesSent){\n   return { files }\n}\nreturn $input.all()"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1904,
        16
      ],
      "id": "c4c8c5a8-6a84-4f24-a040-be0db016dcca",
      "name": "find binaries"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "image/",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    },
                    "id": "2db1ea81-6732-4625-921c-13b3a3b2bc5e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "30c7c3fe-e468-47db-93a2-325210d2256e",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "text/plain",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "plain text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "76cafa71-c2db-4e14-8d10-de756ab27377",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "pdf"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "45a1038c-1525-4c90-97b0-efe5b30989cc",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "application/json",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "json"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dc225f42-d378-4a30-a3fe-8f13df36d675",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "application/rtf",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "rtf"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "50bf48c3-a998-4b15-a230-9509b2d84119",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "text/csv",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "csv"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5c68dba3-a9e7-45ac-ab10-d3bdabc693eb",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "^(text\\/html|application\\/xml)$",
                    "operator": {
                      "type": "string",
                      "operation": "regex"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "html / xml"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "57e2ada6-62ef-4552-9210-433018a5b52f",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "application/vnd.oasis.opendocument.spreadsheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ods"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b777803b-4aac-4e12-81ee-3c283ea26906",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "application/vnd.ms-excel",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "xls"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "67677bce-a8e8-4586-9b31-ac92fbd66c90",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "xlsx"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -912,
        112
      ],
      "id": "f0807fc5-a13b-4176-9241-900f0e332a34",
      "name": "switch"
    },
    {
      "parameters": {
        "operation": "text",
        "binaryPropertyName": "fileBinary",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        256
      ],
      "id": "30aa2a44-01b6-4f33-9e7f-43a3247aa74e",
      "name": "plaintext"
    },
    {
      "parameters": {
        "operation": "pdf",
        "binaryPropertyName": "fileBinary",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        416
      ],
      "id": "50cd565c-91b7-4879-98cd-3350640a5cd7",
      "name": "pdf"
    },
    {
      "parameters": {
        "operation": "fromJson",
        "binaryPropertyName": "fileBinary",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        576
      ],
      "id": "15d1b142-ddd0-4d8c-a0b9-fab2e2c2b18d",
      "name": "json"
    },
    {
      "parameters": {
        "operation": "rtf",
        "binaryPropertyName": "fileBinary",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        736
      ],
      "id": "00bef06d-456d-46c4-8b56-4b942c07fca1",
      "name": "rtf"
    },
    {
      "parameters": {
        "binaryPropertyName": "fileBinary",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        896
      ],
      "id": "bc209b8b-84fb-49fe-af48-f9d226f44bfb",
      "name": "csv"
    },
    {
      "parameters": {
        "operation": "xml",
        "binaryPropertyName": "fileBinary",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        1056
      ],
      "id": "f715925e-1338-451b-b5df-43bfec77d5d9",
      "name": "markup"
    },
    {
      "parameters": {
        "operation": "ods",
        "binaryPropertyName": "fileBinary",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        1216
      ],
      "id": "510ec9f0-5c0c-453f-b3cc-43360a3b94be",
      "name": "ods"
    },
    {
      "parameters": {
        "operation": "xls",
        "binaryPropertyName": "fileBinary",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        1376
      ],
      "id": "5c92c156-b798-45ca-acc6-17c4ab7bcff1",
      "name": "xls"
    },
    {
      "parameters": {
        "operation": "xlsx",
        "binaryPropertyName": "fileBinary",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        1536
      ],
      "id": "c80e2eea-ea96-4a35-bb1b-96fafae0c9a6",
      "name": "xlsx"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "sessionId"
            },
            {
              "name": "action"
            },
            {
              "name": "chatInput"
            },
            {
              "name": "files",
              "type": "array"
            },
            {
              "name": "fileData",
              "type": "array"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -2128,
        -176
      ],
      "id": "71ed7e2d-179d-4e82-bc11-3f2b65ab643b",
      "name": "start"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "fileData",
        "options": {
          "includeBinaries": true
        }
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "19ae3202-a863-4fb4-ae92-db2cf2b9284f",
      "name": "aggregate"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        208,
        -160
      ],
      "id": "f91c9875-f7b4-422c-ae0a-d0411854a5ac",
      "name": "merge"
    },
    {
      "parameters": {
        "fieldToSplitOut": "files",
        "options": {
          "includeBinary": true
        }
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -1712,
        16
      ],
      "id": "9dedf2b9-b8a6-4c58-9f43-99893780ca36",
      "name": "split open"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "binaryPropertyName": "fileBinary",
        "options": {
          "fileName": "={{ $json.fileName }}",
          "mimeType": "={{ $json.mimeTYpe }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -1536,
        16
      ],
      "id": "ae11563c-d11a-4e1f-ab8e-2be87e1faa40",
      "name": "convert to file"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1328,
        16
      ],
      "id": "bdfcf133-b893-443e-b618-fa62d726b95d",
      "name": "loop"
    },
    {
      "parameters": {
        "jsCode": "return [{ json: { data: String($('split open').item.json.data) } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -304,
        96
      ],
      "id": "9755747a-b35e-4225-8ab9-083c43a53041",
      "name": "passthru"
    },
    {
      "parameters": {
        "jsCode": "/*\nto make the files avaialble to your AI agent node, use this as your prompt\n\n{{ $json.fileData?.length && $json.fileData.filter((f) => Object.keys(f)?.length > 0).length > 0 ? \"Attached file(s): \\n \" + JSON.stringify($json.fileData.filter((f) => Object.keys(f)?.length > 0)) : '' }}\n\n{{ $json.chatInput }}\n\n*/\n\n\nconst chat = $('merge').first().json;\nconst aggregateNode = $('aggregate');\nlet folio;\n\nif (chat.files) {\n  folio = aggregateNode.first().json;\n} else {\n  folio = null;\n}\n\nvar jsonOut;\n\nif (folio != null && folio.fileData) {\n  // if there are files, add the array to the chat object\n  jsonOut = Object.assign(chat, folio);\n} else {\n  // no files? just pass on thru\n  jsonOut = chat;\n}\n\nreturn jsonOut;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        416,
        -160
      ],
      "id": "92387ee2-d3b1-43e1-a68e-d631044f780e",
      "name": "code"
    },
    {
      "parameters": {
        "content": "## Pass to Agent \n\n{{ $json.fileData?.length && $json.fileData.filter((f) => Object.keys(f)?.length > 0).length > 0 ? \"Attached file(s): \\n \" + JSON.stringify($json.fileData.filter((f) => Object.keys(f)?.length > 0)) : '' }}\n\n{{ $json.chatInput }}",
        "height": 432,
        "width": 598,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        368,
        -400
      ],
      "id": "5ef42ed3-23d4-4a4c-a6c3-5ca5d9eb9113",
      "name": "Sticky Note"
    }
  ],
  "pinData": {},
  "repo_name": "backup",
  "repo_owner": "tonyfelice",
  "repo_path": "n8/",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-08-19T22:58:03.774Z",
      "updatedAt": "2025-08-19T22:58:03.774Z",
      "role": "workflow:owner",
      "workflowId": "jBU5ABdRopDAYVIM",
      "projectId": "7oc82U5FbxHgMZLy"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-08-21T23:30:26.930Z",
      "updatedAt": "2025-08-21T23:30:26.930Z",
      "id": "TC6GN8ukWr58QCW8",
      "name": "dev"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-08-22T23:49:00.000Z",
  "versionId": "2c64c000-03d6-4bc7-a1b7-7572bf97c88a"
}