{
  "active": false,
  "connections": {
    "find binaries": {
      "main": [
        [
          {
            "node": "split open",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "switch": {
      "main": [
        [
          {
            "node": "image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "plaintext",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "pdf",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "json",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "markup",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "rtf",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "csv",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ods",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "xls",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "xlsx",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "docx",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "plaintext": {
      "main": [
        [
          {
            "node": "filedata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "start": {
      "main": [
        [
          {
            "node": "find binaries",
            "type": "main",
            "index": 0
          },
          {
            "node": "merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "pdf": {
      "main": [
        [
          {
            "node": "filedata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "json": {
      "main": [
        [
          {
            "node": "filedata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "rtf": {
      "main": [
        [
          {
            "node": "filedata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "csv": {
      "main": [
        [
          {
            "node": "filedata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "markup": {
      "main": [
        [
          {
            "node": "filedata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ods": {
      "main": [
        [
          {
            "node": "filedata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "xls": {
      "main": [
        [
          {
            "node": "filedata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "xlsx": {
      "main": [
        [
          {
            "node": "filedata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "aggregate": {
      "main": [
        [
          {
            "node": "merge",
            "type": "main",
            "index": 7
          }
        ]
      ]
    },
    "split open": {
      "main": [
        [
          {
            "node": "convert to file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert to file": {
      "main": [
        [
          {
            "node": "extract",
            "type": "main",
            "index": 0
          },
          {
            "node": "uploads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "merge": {
      "main": [
        [
          {
            "node": "output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "image": {
      "main": [
        [
          {
            "node": "filedata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extract": {
      "main": [
        [
          {
            "node": "aggregate",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "format": {
      "main": [
        [
          {
            "node": "merge",
            "type": "main",
            "index": 6
          }
        ]
      ]
    },
    "filedata": {
      "main": [
        [
          {
            "node": "extract",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "uploads": {
      "main": [
        [
          {
            "node": "format",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "docx": {
      "main": [
        [
          {
            "node": "filedata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-22T23:48:36.485Z",
  "id": "MJBMRuWejaMlDJh5",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "CZM: file handler 5.0",
  "nodes": [
    {
      "parameters": {
        "jsCode": "const files = $input.all().at(0)?.binary;\nconst isFilesSent = typeof files === 'object' && Object.keys(files)?.length;\nif(isFilesSent){\n   return { files }\n}\nreturn $input.all()"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1904,
        -144
      ],
      "id": "87a51fe7-1592-4a73-a26b-0cfda1b2c077",
      "name": "find binaries"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "^image\\/(png|jpeg|gif|webp)$",
                    "operator": {
                      "type": "string",
                      "operation": "regex"
                    },
                    "id": "2db1ea81-6732-4625-921c-13b3a3b2bc5e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "30c7c3fe-e468-47db-93a2-325210d2256e",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "^text\\/(plain|markdown|x\\-markdown)$",
                    "operator": {
                      "type": "string",
                      "operation": "regex"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "plain text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "76cafa71-c2db-4e14-8d10-de756ab27377",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "pdf"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "45a1038c-1525-4c90-97b0-efe5b30989cc",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "application/json",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "json"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5c68dba3-a9e7-45ac-ab10-d3bdabc693eb",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "application/xml",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "xml"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dc225f42-d378-4a30-a3fe-8f13df36d675",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "^(application|text)\\/rtf$",
                    "operator": {
                      "type": "string",
                      "operation": "regex"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "rtf"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "50bf48c3-a998-4b15-a230-9509b2d84119",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "text/csv",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "csv"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "57e2ada6-62ef-4552-9210-433018a5b52f",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "application/vnd.oasis.opendocument.spreadsheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ods"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b777803b-4aac-4e12-81ee-3c283ea26906",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "application/vnd.ms-excel",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "xls"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "67677bce-a8e8-4586-9b31-ac92fbd66c90",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "xlsx"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5043f100-1679-4c60-a6ef-72285d55c432",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "docx"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -912,
        160
      ],
      "id": "81167717-fa61-46f1-951e-566e22f5df51",
      "name": "switch"
    },
    {
      "parameters": {
        "operation": "text",
        "binaryPropertyName": "fileBinary",
        "destinationKey": "content",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        304
      ],
      "id": "e8918978-b607-4a1d-8a85-8b416695fd64",
      "name": "plaintext"
    },
    {
      "parameters": {
        "operation": "pdf",
        "binaryPropertyName": "fileBinary",
        "options": {
          "joinPages": true
        }
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        464
      ],
      "id": "3f196dbc-761c-46cf-b89b-96c754fb58b3",
      "name": "pdf"
    },
    {
      "parameters": {
        "operation": "fromJson",
        "binaryPropertyName": "fileBinary",
        "destinationKey": "content",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        624
      ],
      "id": "84a1eeb9-a4d1-4885-a9b0-247bf5dd2b87",
      "name": "json"
    },
    {
      "parameters": {
        "operation": "rtf",
        "binaryPropertyName": "fileBinary",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        944
      ],
      "id": "722f8193-67af-4e11-9740-74e97cb0ca4c",
      "name": "rtf"
    },
    {
      "parameters": {
        "binaryPropertyName": "fileBinary",
        "options": {
          "headerRow": true,
          "rawData": false,
          "readAsString": false
        }
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        1104
      ],
      "id": "2f07e51d-d58d-4d76-8860-ca7a1ab7ab5b",
      "name": "csv"
    },
    {
      "parameters": {
        "operation": "xml",
        "binaryPropertyName": "fileBinary",
        "destinationKey": "content",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        784
      ],
      "id": "7eaea51a-55f9-4a6a-bdd5-6afa853c950b",
      "name": "markup"
    },
    {
      "parameters": {
        "operation": "ods",
        "binaryPropertyName": "fileBinary",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        1264
      ],
      "id": "fbf97295-3939-4497-b4b8-22ab5a58ce18",
      "name": "ods"
    },
    {
      "parameters": {
        "operation": "xls",
        "binaryPropertyName": "fileBinary",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        1424
      ],
      "id": "ee7beb27-079e-4f5e-841a-5e9a88923da1",
      "name": "xls"
    },
    {
      "parameters": {
        "operation": "xlsx",
        "binaryPropertyName": "fileBinary",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        1584
      ],
      "id": "bdca8906-bafd-42e1-9be2-316589199c27",
      "name": "xlsx"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "sessionId"
            },
            {
              "name": "action"
            },
            {
              "name": "chatInput"
            },
            {
              "name": "files",
              "type": "array"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -2160,
        -336
      ],
      "id": "1c1c8a8d-9217-4333-a34f-90b2ffb75cb1",
      "name": "start"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "fileData",
        "options": {
          "includeBinaries": true
        }
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -48,
        48
      ],
      "id": "ad4b9f9e-032f-4d7a-8890-3375a02b1f4d",
      "name": "aggregate"
    },
    {
      "parameters": {
        "numberInputs": 8
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        208,
        -320
      ],
      "id": "f698c908-521f-45b3-8ddf-bc3bae0b54c2",
      "name": "merge"
    },
    {
      "parameters": {
        "fieldToSplitOut": "files",
        "options": {
          "includeBinary": true
        }
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -1712,
        -144
      ],
      "id": "11ee246d-3c85-4c39-8f53-6fd5865c30af",
      "name": "split open"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "binaryKey",
        "binaryPropertyName": "fileBinary",
        "options": {
          "fileName": "={{ $json.fileName }}",
          "mimeType": "={{ $json.mimeType }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -1520,
        -144
      ],
      "id": "7599ff60-ffbe-443c-96c6-c4cf8cf1a376",
      "name": "convert to file"
    },
    {
      "parameters": {
        "jsCode": "const input = $input.all();\nif (Array.isArray(input[0].json.files)) {\n  // files[] exists, extract uploads and fileData arrays\n  const arrUploads = input[1].json.uploads;\n  const arrFileData = input[2].json.fileData;\n  \n  // merge based on fileName\n  const merged = arrFileData.map(fds => {\n    const match = arrUploads.find(ups => ups.fileName === fds.fileName);\n    const preOut = { ...fds, ...(match || {}) };\n    \n    // remove extraneous keys\n    delete preOut.kind;\n    delete preOut.name;\n    \n    return preOut;\n  });\n\n  // replace files[] with enhanced data\n  input[0].json.files = merged;\n}\nreturn input[0];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        416,
        -224
      ],
      "id": "ea1991af-4f3f-4777-8181-6c2307981d44",
      "name": "output"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "inputType": "base64",
        "binaryPropertyName": "fileBinary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -304,
        144
      ],
      "id": "0963583b-dc2e-401e-8711-4b267bb5a507",
      "name": "image",
      "credentials": {
        "openAiApi": {
          "id": "X3Nhu6EWyz9LN2fj",
          "name": "czm-openai"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1264,
        64
      ],
      "id": "2403961f-2b05-4ee0-8c90-363098fcd379",
      "name": "extract"
    },
    {
      "parameters": {
        "content": "# to do\n+ handle svg\n",
        "height": 288,
        "width": 448,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        416,
        -528
      ],
      "id": "56133965-a4ce-46fd-af9d-eeea7a9be90e",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "jsCode": "// Get the uploads and files data\nconst uploads = $input.all().map(el => {\n  const fileUrl = `https://drive.google.com/file/d/${el.json.id}/view`;\n  return { ...el.json, fileUrl };\n});\n\nconst files = $('start').item.json.files;\n\n// Create a map for quick lookup of files by name\nconst filesMap = new Map();\nfiles.forEach(file => {\n  filesMap.set(file.fileName, file);\n});\n\n// Merge the data\nconst objUploads = {\n  \"uploads\": uploads.map(upload => {\n    const fileName = upload.name;\n    const matchingFile = files.find(file => fileName.endsWith(file.fileName));\n    \n    if (matchingFile) {\n      return {\n        ...upload,\n        ...matchingFile,\n        fileUrl: upload.fileUrl\n      };\n    }\n    // Otherwise, return the original upload object\n    return upload;\n  })\n};\n\n// Return the merged data\nreturn [{ json: objUploads }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1120,
        -144
      ],
      "id": "6dda94f4-d6a5-4625-abbb-c5d2ef1b6f07",
      "name": "format"
    },
    {
      "parameters": {
        "jsCode": "const folio = $('start').item.json.files[$runIndex];\nconst inputs = $input.all().map(i => i.json);\n\nlet jsonOut;\n\nif (inputs.length === 1) {\n  jsonOut = { ...inputs[0], ...folio };\n} else {\n  // tabular data\n  jsonOut = {\n    ...folio,\n    rows: inputs,   \n  };\n}\n\nreturn jsonOut;\n\n\n/* orig\nconst folio = $('start').item.json.files[$runIndex];\nconst este = $input.item.json;\nlet jsonOut = Object.assign({}, este, folio);\nreturn jsonOut;\n*/\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1456,
        64
      ],
      "id": "6973846d-9f29-435a-a412-040ae5f3979f",
      "name": "filedata"
    },
    {
      "parameters": {
        "inputDataFieldName": "fileBinary",
        "name": "={{ $('start').item.json.sessionId }}-{{ $('split open').item.json.fileName }}",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1fer_5cMknvjYmTxuxavY3WqmvAm671tA",
          "mode": "list",
          "cachedResultName": "chatUploads",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1fer_5cMknvjYmTxuxavY3WqmvAm671tA"
        },
        "options": {
          "simplifyOutput": true
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -1312,
        -144
      ],
      "id": "e6ed554e-1820-45e9-b08c-de4824243510",
      "name": "uploads",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "hpyRggGv1xon9oys",
          "name": "drive.t@czm"
        }
      }
    },
    {
      "parameters": {
        "inputBinaryField": "fileBinary",
        "destinationOutputField": "content"
      },
      "type": "n8n-nodes-docx-converter.docxToText",
      "typeVersion": 1,
      "position": [
        -304,
        1744
      ],
      "id": "88d397ef-08a7-459a-a086-be204bc20c35",
      "name": "docx"
    }
  ],
  "pinData": {
    "start": [
      {
        "json": {
          "sessionId": "5b1a99da-ade3-4ffa-a86d-e10fa2529705",
          "action": "sendMessage",
          "chatInput": "image?",
          "files": [
            {
              "fileName": "cesium-ai-automation-logo-_-two-color-dark.png",
              "fileSize": "7.14 kB",
              "fileType": "image",
              "mimeType": "image/png",
              "fileExtension": "png",
              "binaryKey": "data0"
            }
          ]
        }
      }
    ]
  },
  "repo_name": "backup",
  "repo_owner": "tonyfelice",
  "repo_path": "n8/",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-08-22T23:48:36.493Z",
      "updatedAt": "2025-08-22T23:48:36.493Z",
      "role": "workflow:owner",
      "workflowId": "MJBMRuWejaMlDJh5",
      "projectId": "7oc82U5FbxHgMZLy"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-08-17T23:59:40.815Z",
      "updatedAt": "2025-08-17T23:59:40.815Z",
      "id": "3xekQCysfg8WeVyP",
      "name": "production"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-09-24T22:44:03.000Z",
  "versionId": "0a63706d-705d-4d6c-87af-571df469f28f"
}