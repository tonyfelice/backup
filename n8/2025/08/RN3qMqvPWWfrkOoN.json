{
  "active": false,
  "connections": {
    "find binaries": {
      "main": [
        [
          {
            "node": "split open",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "switch": {
      "main": [
        [
          {
            "node": "image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "plaintext",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "pdf",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "json",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "rtf",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "csv",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "markup",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ods",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "xls",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "xlsx",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "plaintext": {
      "main": [
        [
          {
            "node": "filedata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "start": {
      "main": [
        [
          {
            "node": "find binaries",
            "type": "main",
            "index": 0
          },
          {
            "node": "merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "pdf": {
      "main": [
        [
          {
            "node": "filedata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "json": {
      "main": [
        [
          {
            "node": "filedata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "rtf": {
      "main": [
        [
          {
            "node": "filedata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "csv": {
      "main": [
        [
          {
            "node": "filedata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "markup": {
      "main": [
        [
          {
            "node": "filedata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ods": {
      "main": [
        [
          {
            "node": "filedata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "xls": {
      "main": [
        [
          {
            "node": "filedata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "xlsx": {
      "main": [
        [
          {
            "node": "filedata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "aggregate": {
      "main": [
        [
          {
            "node": "merge",
            "type": "main",
            "index": 7
          }
        ]
      ]
    },
    "split open": {
      "main": [
        [
          {
            "node": "convert to file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert to file": {
      "main": [
        [
          {
            "node": "extract",
            "type": "main",
            "index": 0
          },
          {
            "node": "uploads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "merge": {
      "main": [
        [
          {
            "node": "output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "image": {
      "main": [
        [
          {
            "node": "filedata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extract": {
      "main": [
        [
          {
            "node": "aggregate",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "format": {
      "main": [
        [
          {
            "node": "merge",
            "type": "main",
            "index": 6
          }
        ]
      ]
    },
    "filedata": {
      "main": [
        [
          {
            "node": "extract",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "uploads": {
      "main": [
        [
          {
            "node": "format",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-22T17:36:10.347Z",
  "id": "RN3qMqvPWWfrkOoN",
  "isArchived": true,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "CZM: file handler 4.2",
  "nodes": [
    {
      "parameters": {
        "jsCode": "const files = $input.all().at(0)?.binary;\nconst isFilesSent = typeof files === 'object' && Object.keys(files)?.length;\nif(isFilesSent){\n   return { files }\n}\nreturn $input.all()"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1904,
        -144
      ],
      "id": "b1c1d623-9f6d-4713-9872-7a1599f85735",
      "name": "find binaries"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "image/",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    },
                    "id": "2db1ea81-6732-4625-921c-13b3a3b2bc5e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "30c7c3fe-e468-47db-93a2-325210d2256e",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "text/plain",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "plain text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "76cafa71-c2db-4e14-8d10-de756ab27377",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "pdf"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "45a1038c-1525-4c90-97b0-efe5b30989cc",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "application/json",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "json"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dc225f42-d378-4a30-a3fe-8f13df36d675",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "application/rtf",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "rtf"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "50bf48c3-a998-4b15-a230-9509b2d84119",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "text/csv",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "csv"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5c68dba3-a9e7-45ac-ab10-d3bdabc693eb",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "application/xml",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "xml"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "57e2ada6-62ef-4552-9210-433018a5b52f",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "application/vnd.oasis.opendocument.spreadsheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ods"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b777803b-4aac-4e12-81ee-3c283ea26906",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "application/vnd.ms-excel",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "xls"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "67677bce-a8e8-4586-9b31-ac92fbd66c90",
                    "leftValue": "={{ $('start').item.json.files[$runIndex].mimeType }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "xlsx"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -912,
        160
      ],
      "id": "22c9ebc0-bf0e-4684-b4f5-6c1583c759bd",
      "name": "switch"
    },
    {
      "parameters": {
        "operation": "text",
        "binaryPropertyName": "fileBinary",
        "destinationKey": "content",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        304
      ],
      "id": "876f943d-bfd0-4fa9-90b4-2d16d17efbf9",
      "name": "plaintext"
    },
    {
      "parameters": {
        "operation": "pdf",
        "binaryPropertyName": "fileBinary",
        "options": {
          "joinPages": true
        }
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        464
      ],
      "id": "173659a9-9c60-40d4-b185-427156c1ea89",
      "name": "pdf"
    },
    {
      "parameters": {
        "operation": "fromJson",
        "binaryPropertyName": "fileBinary",
        "destinationKey": "content",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        624
      ],
      "id": "d6e217f4-aa38-4b81-91f8-675dec6234e2",
      "name": "json"
    },
    {
      "parameters": {
        "operation": "rtf",
        "binaryPropertyName": "fileBinary",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        784
      ],
      "id": "f4792d99-6bab-4e04-9a3c-f81054cafa9d",
      "name": "rtf"
    },
    {
      "parameters": {
        "binaryPropertyName": "fileBinary",
        "options": {
          "headerRow": true,
          "rawData": false,
          "readAsString": false
        }
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        944
      ],
      "id": "914e59b3-7b35-43a0-9cda-bb169f7f074f",
      "name": "csv"
    },
    {
      "parameters": {
        "operation": "xml",
        "binaryPropertyName": "fileBinary",
        "destinationKey": "content",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        1104
      ],
      "id": "a011a9aa-da28-40ec-be8e-71286dc7c060",
      "name": "markup"
    },
    {
      "parameters": {
        "operation": "ods",
        "binaryPropertyName": "fileBinary",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        1264
      ],
      "id": "db2cd8a2-f464-4a51-be99-ba8563404531",
      "name": "ods"
    },
    {
      "parameters": {
        "operation": "xls",
        "binaryPropertyName": "fileBinary",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        1424
      ],
      "id": "bded7b32-c4eb-435b-81e5-0049bea80866",
      "name": "xls"
    },
    {
      "parameters": {
        "operation": "xlsx",
        "binaryPropertyName": "fileBinary",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -304,
        1584
      ],
      "id": "ab93444b-6be8-489b-ac11-2e035c841e3e",
      "name": "xlsx"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "sessionId"
            },
            {
              "name": "action"
            },
            {
              "name": "chatInput"
            },
            {
              "name": "files",
              "type": "array"
            },
            {
              "name": "fileData",
              "type": "array"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -2128,
        -336
      ],
      "id": "cbead2ba-dedf-49ea-abc1-f2bb21d06e59",
      "name": "start"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "fileData",
        "options": {
          "includeBinaries": true
        }
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        0,
        48
      ],
      "id": "52ca9725-68cb-47ee-8f67-671c8a1e2d71",
      "name": "aggregate"
    },
    {
      "parameters": {
        "numberInputs": 8
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        208,
        -320
      ],
      "id": "28393ef4-4c87-4bc7-bc58-55cb2b1705ba",
      "name": "merge"
    },
    {
      "parameters": {
        "fieldToSplitOut": "files",
        "options": {
          "includeBinary": true
        }
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -1712,
        -144
      ],
      "id": "575a8eb0-cf48-4669-99c7-11fe758d6beb",
      "name": "split open"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "binaryPropertyName": "fileBinary",
        "options": {
          "fileName": "={{ $json.fileName }}",
          "mimeType": "={{ $json.mimeTYpe }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -1520,
        -144
      ],
      "id": "a8630a02-18e6-4239-a8f2-11e05721e5f2",
      "name": "convert to file"
    },
    {
      "parameters": {
        "jsCode": "const chat = $input.first().json;\nconst allItems = $input.all();\n\nlet folio = null;\nconst fileDataItem = allItems.find(item => {\n  return item.json.fileData !== undefined;\n});\nif (fileDataItem){\n  folio = fileDataItem.json;\n}\nif (!folio.fileData) {\n  folio = $input.last().json;\n}\n\n\nif (!folio.fileData) {\n  folio = $input.last().json;\n}\n/*\n\n*/\n\nconst uploadsItem = allItems.find(item => {\n  return item.json.uploads !== undefined;\n});\n\nlet jsonOut;\n\nif (folio != null && folio.fileData) {\n  jsonOut = Object.assign({}, chat, folio); \n  \n  // Create a readable string of the file data to prepend\n  const fileDataString = folio.fileData\n    .map(f => f.content)\n    .join('\\n');\n\n  // Prepend the chatInput with the file data and a clear separator\n  jsonOut.chatInput = `Attached file(s):\\n${fileDataString}\\n\\n${jsonOut.chatInput}`;\n\n} else {\n  jsonOut = chat;\n}\n\nreturn jsonOut;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        416,
        -224
      ],
      "id": "dbab853c-5c87-4309-9e9f-8dfc88d30e2b",
      "name": "output"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "inputType": "base64",
        "binaryPropertyName": "fileBinary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -304,
        144
      ],
      "id": "fc8a3f50-3b14-44ea-a6f5-042530e87f65",
      "name": "image",
      "credentials": {
        "openAiApi": {
          "id": "X3Nhu6EWyz9LN2fj",
          "name": "czm-openai"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1264,
        64
      ],
      "id": "e2e5f42d-5745-41f6-bc1d-07aedf0f70c3",
      "name": "extract"
    },
    {
      "parameters": {
        "content": "pdf = fileData.text",
        "height": 96,
        "width": 176,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -128,
        464
      ],
      "id": "feb22273-af30-4fe1-b4b0-114a58250c64",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "content",
        "height": 96,
        "width": 176,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -128,
        304
      ],
      "id": "ed7bced4-a26d-4a03-a943-457fdbfe2844",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "content",
        "height": 96,
        "width": 176,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -128,
        624
      ],
      "id": "480cd6fd-59af-42b3-bdae-8ffc1f52d030",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "rtf = fileData.???",
        "height": 96,
        "width": 176,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -128,
        784
      ],
      "id": "749e0cd9-2ad5-4f77-94a9-5ae968cb528d",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "csv = fileData.???",
        "height": 96,
        "width": 176,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -128,
        944
      ],
      "id": "3fceedc9-c88d-4431-bb1f-aa2b1210195f",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "ods = fileData.???",
        "height": 96,
        "width": 176,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -128,
        1264
      ],
      "id": "51a49841-105a-4732-a3ac-21cc9eda1d31",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "content",
        "height": 96,
        "width": 176,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -128,
        1104
      ],
      "id": "bbf9e0cc-7851-4182-882b-e3916697d868",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "xls = fileData.???",
        "height": 96,
        "width": 176,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -128,
        1424
      ],
      "id": "b886813c-d45e-4301-bef8-e555665e560e",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "xlsx = fileData.???",
        "height": 96,
        "width": 176,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -128,
        1584
      ],
      "id": "61b30d8d-8668-42d4-b4d9-bc2744a8eacf",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "+ handle data in nodes other than content\n+ add url to files[]\n+ add filename to chatInput",
        "height": 96,
        "width": 448,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        416,
        -336
      ],
      "id": "3bb73150-38e0-4c10-b42e-ba8027cf15ed",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "jsCode": "const folio = $('start').item.json.files[$runIndex];\nconst este = $input.item.json;\nlet jsonOut = Object.assign({}, este, folio);\n\nconst objUploads = {\n  \"uploads\": jsonOut.map(el => {\n    // grab the id for the url\n    const itemId = el.json.id;\n    const fileUrl = `https://drive.google.com/file/d/${itemId}/view`;\n    return {\n      ...el.json,\n      fileUrl: fileUrl\n    };\n  })\n};\n\nreturn [{ json: objUploads }];\n\n// add url \n/*\nconst objUploads = {\n  \"uploads\": $input.all().map(el => {\n    // grab the id for the url\n    const itemId = el.json.id;\n    const fileUrl = `https://drive.google.com/file/d/${itemId}/view`;\n\n    return {\n      ...el.json,\n      fileUrl: fileUrl\n    };\n  })\n};\n\nreturn [{ json: objUploads }];\n*/"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1120,
        -144
      ],
      "id": "557a098a-012c-4d23-a8fc-8c72c9379780",
      "name": "format"
    },
    {
      "parameters": {
        "jsCode": "const folio = $('start').item.json.files[$runIndex];\nconst este = $input.item.json;\nlet jsonOut = Object.assign({}, este, folio);\nreturn jsonOut;\n\n\n\n\n\n// Loop over input items and add filename to each one\n/*for (const item of $input.all()) {\n  item.json.fileName = 1;\n}\n\nreturn $input.all();*/"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1456,
        64
      ],
      "id": "22d97db4-f416-48fa-bdf1-58bc003e7b48",
      "name": "filedata"
    },
    {
      "parameters": {
        "inputDataFieldName": "fileBinary",
        "name": "={{ $('start').item.json.sessionId }}-{{ $('split open').item.json.fileName }}",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1fer_5cMknvjYmTxuxavY3WqmvAm671tA",
          "mode": "list",
          "cachedResultName": "chatUploads",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1fer_5cMknvjYmTxuxavY3WqmvAm671tA"
        },
        "options": {
          "simplifyOutput": true
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -1312,
        -144
      ],
      "id": "f44af42c-8e2b-452c-940a-6580c69f65f9",
      "name": "uploads",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "hpyRggGv1xon9oys",
          "name": "drive.t@czm"
        }
      }
    }
  ],
  "pinData": {
    "start": [
      {
        "json": {
          "sessionId": "0b6d97115bc24e67abbfae053f3152d9",
          "action": "sendMessage",
          "chatInput": "dsagf",
          "files": [
            {
              "fileName": "testfile.txt",
              "fileSize": "18 bytes",
              "fileExtension": "txt",
              "fileType": "text",
              "mimeType": "text/plain"
            },
            {
              "fileName": "testsheet .csv",
              "fileSize": "98 bytes",
              "fileExtension": "csv",
              "fileType": "text",
              "mimeType": "text/csv"
            }
          ],
          "fileData": null
        }
      }
    ]
  },
  "repo_name": "backup",
  "repo_owner": "tonyfelice",
  "repo_path": "n8/",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-08-22T17:36:10.356Z",
      "updatedAt": "2025-08-22T17:36:10.356Z",
      "role": "workflow:owner",
      "workflowId": "RN3qMqvPWWfrkOoN",
      "projectId": "7oc82U5FbxHgMZLy"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-08-21T23:30:26.930Z",
      "updatedAt": "2025-08-21T23:30:26.930Z",
      "id": "TC6GN8ukWr58QCW8",
      "name": "dev"
    },
    {
      "createdAt": "2025-08-21T23:38:12.196Z",
      "updatedAt": "2025-08-21T23:38:12.196Z",
      "id": "UZgBu3fbi0GQ3tgi",
      "name": "working"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-08-22T23:49:21.000Z",
  "versionId": "e2b1c1c7-2103-4708-8b1d-e172c575dfdb"
}