{
  "active": true,
  "connections": {
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Update Row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "gpt-4-turbo": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Create Prompt": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Create Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Row": {
      "main": [
        [
          {
            "node": "Relax",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Relax": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "New Item Added": {
      "main": [
        [
          {
            "node": "Find Missing Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Missing Fields": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-03-05T17:41:26.271Z",
  "id": "rIgkqz1K660MFQlw",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "CZM: get product summary",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.prompt }}",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1408,
        -16
      ],
      "id": "152259a2-b8a4-4244-ba5b-40e1501719f8",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"id\": 1,\n\t\"product\": \"ChatGPT\",\n\t\"about\": \"OpenAI's latest language model, known for its advanced natural language understanding and generation capabilities.\",\n\t\"category\": \"LLM\",\n\t\"product-uri\": \"https://openai.com/chatgpt/overview/\",\n\t\"parent-company\": \"OpenAI\",\n\t\"company-uri\": \"https://openai.com/\",\n\t\"original-logo\": \"https://upload.wikimedia.org/wikipedia/commons/0/04/ChatGPT_logo.svg\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1648,
        192
      ],
      "id": "47802cc4-2044-4da9-8684-c2b77fb6ba00",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4-turbo",
          "mode": "list",
          "cachedResultName": "gpt-4-turbo"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1344,
        192
      ],
      "id": "0012adf4-7b8c-47bb-b30f-168cb1928f45",
      "name": "gpt-4-turbo",
      "credentials": {
        "openAiApi": {
          "id": "X3Nhu6EWyz9LN2fj",
          "name": "czm-openai"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [{\n  json: {\n    prompt: `Provide details about ${items[0].json.product} including its parent company, and company URI. Provide a short summary of the tool for the field \"about\", and for category, provide a single phrase in Title Case, which would describe how we can best categorize this tool in the context of an agentive AI workflow (example: is it a Language Model, a Resource, an Image Model, a database?). For original-logo, we are looking for a fully qualified path to an SVG version of the logo. Be sure to preserve the original ${items[0].json.id} value of the row, and pass it through unchanged to output. Return JSON only. Thank You!`\n  }\n}];"
      },
      "name": "Create Prompt",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1200,
        -16
      ],
      "id": "ec85cbbc-cb48-4de5-b9d9-4678c3cdade7"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        960,
        -16
      ],
      "id": "8b76b6c0-8a99-45a2-8a5b-7a8c64709737",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1W8Vz4j6tf426XK7ANIzv1WHxJs3aMNC9SxwJ8VGdHYg",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "tools",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1W8Vz4j6tf426XK7ANIzv1WHxJs3aMNC9SxwJ8VGdHYg/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $json.output.id }}",
            "product": "={{ $json.output.product }}",
            "about": "={{ $json.output.about }}",
            "category": "={{ $json.output.category }}",
            "product-uri": "={{ $json.output[\"product-uri\"] }}",
            "parent-company": "={{ $json.output[\"parent-company\"] }}",
            "company-uri": "={{ $json.output[\"company-uri\"] }}",
            "original-logo": "={{ $json.output[\"original-logo\"] }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "product",
              "displayName": "product",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "about",
              "displayName": "about",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "category",
              "displayName": "category",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "product-uri",
              "displayName": "product-uri",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "parent-company",
              "displayName": "parent-company",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "company-uri",
              "displayName": "company-uri",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "original-logo",
              "displayName": "original-logo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1760,
        -16
      ],
      "id": "9bae13dc-481a-490e-ac60-a7982046a4eb",
      "name": "Update Row",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Dpa6tIiMq0Q7eg4a",
          "name": "czm-n8n-gsheet"
        }
      }
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2064,
        160
      ],
      "id": "768843ab-e46a-4ab6-b8ec-56cac2b143af",
      "name": "Relax",
      "webhookId": "be5603be-2b6b-43b9-8e66-7d1d51ca4ae6"
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "value": "1W8Vz4j6tf426XK7ANIzv1WHxJs3aMNC9SxwJ8VGdHYg",
          "mode": "list",
          "cachedResultName": "czm-content",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1W8Vz4j6tf426XK7ANIzv1WHxJs3aMNC9SxwJ8VGdHYg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "tools",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1W8Vz4j6tf426XK7ANIzv1WHxJs3aMNC9SxwJ8VGdHYg/edit#gid=0"
        },
        "event": "rowUpdate",
        "options": {
          "columnsToWatch": [
            "product"
          ]
        }
      },
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "typeVersion": 1,
      "position": [
        560,
        -16
      ],
      "id": "1d293956-1334-4e02-8125-bc3be17bec77",
      "name": "New Item Added",
      "credentials": {
        "googleSheetsTriggerOAuth2Api": {
          "id": "frdheK337guchZdq",
          "name": "Google Sheets Trigger account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const missingFields = [];\n  ['about', 'category', 'parent-company', 'company-uri', 'original-logo'].forEach(field => {\n    if (!item.json[field]) missingFields.push(field);\n  });\n  item.json.missingFields = missingFields;\n  return item;\n});"
      },
      "name": "Find Missing Fields",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        768,
        -16
      ],
      "id": "3ebdcce7-3c6e-4625-9a7b-60c639eb697b"
    }
  ],
  "pinData": {},
  "repo_name": "backup",
  "repo_owner": "tonyfelice",
  "repo_path": "n8/",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Google Sheets Trigger": {
      "documentId": "1W8Vz4j6tf426XK7ANIzv1WHxJs3aMNC9SxwJ8VGdHYg",
      "sheetId": 0,
      "lastRevision": 684,
      "lastRevisionLink": "https://docs.google.com/spreadsheets/export?id=1W8Vz4j6tf426XK7ANIzv1WHxJs3aMNC9SxwJ8VGdHYg&revision=684&exportFormat=xlsx"
    },
    "node:New Item Added": {
      "documentId": "1W8Vz4j6tf426XK7ANIzv1WHxJs3aMNC9SxwJ8VGdHYg",
      "sheetId": 0,
      "lastRevision": 1506,
      "lastRevisionLink": "https://docs.google.com/spreadsheets/export?id=1W8Vz4j6tf426XK7ANIzv1WHxJs3aMNC9SxwJ8VGdHYg&revision=1506&exportFormat=xlsx"
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-08-20T00:53:00.000Z",
  "versionId": "e6afff12-9804-4798-8d6c-8c7e9e5eb7b5"
}